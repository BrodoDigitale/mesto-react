{"ast":null,"code":"class Api {\n  constructor(config) {\n    // тело конструктора\n    this._url = config.url;\n    this._headers = config.headers;\n  }\n\n  getInitialCards() {\n    return fetch(`${this._url}/cards`, {\n      method: 'GET',\n      headers: this._headers\n    }).then(this._handleResponse);\n  }\n\n  getUserData() {\n    return fetch(`${this._url}/users/me`, {\n      method: 'GET',\n      headers: this._headers\n    }).then(this._handleResponse);\n  }\n\n  updateUserData(data) {\n    return fetch(`${this._url}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.userName,\n        about: data.userInfo\n      })\n    }).then(this._handleResponse);\n  }\n\n  updateAvatar(newLink) {\n    return fetch(`${this._url}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: newLink\n      })\n    }).then(this._handleResponse);\n  }\n\n  addCard(data) {\n    return fetch(`${this._url}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        link: data.link\n      })\n    }).then(this._handleResponse);\n  }\n\n  deleteCard(id) {\n    return fetch(`${this._url}/cards/${id}`, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(this._handleResponse);\n  }\n\n  _handleResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n\n    return Promise.reject(`Ошибка: ${res.status}`);\n  }\n\n  putLike(id) {\n    return fetch(`${this._url}/cards/likes/${id}`, {\n      method: 'PUT',\n      headers: this._headers\n    }).then(this._handleResponse);\n  }\n\n  deleteLike(id) {\n    return fetch(`${this._url}/cards/likes/${id}`, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(this._handleResponse);\n  }\n\n} //Создание api\n\n\nexport const mestoApi = new Api({\n  url: 'https://mesto.nomoreparties.co/v1/cohort-26',\n  headers: {\n    \"authorization\": \"ff36f33a-78de-4788-b2e8-96f517dc0490\",\n    \"Content-Type\": \"application/json\"\n  }\n});","map":{"version":3,"sources":["/Users/macbook/Documents/Frontend study/mesto-react/mesto/src/utils/api.js"],"names":["Api","constructor","config","_url","url","_headers","headers","getInitialCards","fetch","method","then","_handleResponse","getUserData","updateUserData","data","body","JSON","stringify","name","userName","about","userInfo","updateAvatar","newLink","avatar","addCard","link","deleteCard","id","res","ok","json","Promise","reject","status","putLike","deleteLike","mestoApi"],"mappings":"AAAA,MAAMA,GAAN,CAAU;AACNC,EAAAA,WAAW,CAACC,MAAD,EAAS;AAClB;AACA,SAAKC,IAAL,GAAYD,MAAM,CAACE,GAAnB;AACA,SAAKC,QAAL,GAAgBH,MAAM,CAACI,OAAvB;AACD;;AAEDC,EAAAA,eAAe,GAAG;AACd,WAAOC,KAAK,CAAE,GAAE,KAAKL,IAAK,QAAd,EAAsB;AAC9BM,MAAAA,MAAM,EAAE,KADsB;AAE9BH,MAAAA,OAAO,EAAE,KAAKD;AAFgB,KAAtB,CAAL,CAINK,IAJM,CAID,KAAKC,eAJJ,CAAP;AAKF;;AACDC,EAAAA,WAAW,GAAG;AACX,WAAOJ,KAAK,CAAE,GAAE,KAAKL,IAAK,WAAd,EAAyB;AACjCM,MAAAA,MAAM,EAAE,KADyB;AAEjCH,MAAAA,OAAO,EAAE,KAAKD;AAFmB,KAAzB,CAAL,CAINK,IAJM,CAID,KAAKC,eAJJ,CAAP;AAKF;;AACDE,EAAAA,cAAc,CAACC,IAAD,EAAO;AACpB,WAAON,KAAK,CAAE,GAAE,KAAKL,IAAK,WAAd,EAAyB;AACrCM,MAAAA,MAAM,EAAE,OAD6B;AAErCH,MAAAA,OAAO,EAAE,KAAKD,QAFuB;AAGrCU,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,QAAAA,IAAI,EAAEJ,IAAI,CAACK,QADQ;AAEnBC,QAAAA,KAAK,EAAEN,IAAI,CAACO;AAFO,OAAf;AAH+B,KAAzB,CAAL,CAQRX,IARQ,CAQH,KAAKC,eARF,CAAP;AASA;;AACDW,EAAAA,YAAY,CAACC,OAAD,EAAU;AACrB,WAAOf,KAAK,CAAE,GAAE,KAAKL,IAAK,kBAAd,EAAgC;AAC5CM,MAAAA,MAAM,EAAE,OADoC;AAE5CH,MAAAA,OAAO,EAAE,KAAKD,QAF8B;AAG5CU,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBO,QAAAA,MAAM,EAAED;AADW,OAAf;AAHsC,KAAhC,CAAL,CAONb,IAPM,CAOD,KAAKC,eAPJ,CAAP;AAQA;;AACDc,EAAAA,OAAO,CAACX,IAAD,EAAO;AACZ,WAAON,KAAK,CAAG,GAAE,KAAKL,IAAK,QAAf,EAAwB;AAClCM,MAAAA,MAAM,EAAE,MAD0B;AAElCH,MAAAA,OAAO,EAAE,KAAKD,QAFoB;AAGlCU,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACrBC,QAAAA,IAAI,EAAEJ,IAAI,CAACI,IADU;AAErBQ,QAAAA,IAAI,EAAEZ,IAAI,CAACY;AAFU,OAAf;AAH4B,KAAxB,CAAL,CAQNhB,IARM,CAQD,KAAKC,eARJ,CAAP;AASD;;AACFgB,EAAAA,UAAU,CAACC,EAAD,EAAK;AACb,WAAOpB,KAAK,CAAE,GAAE,KAAKL,IAAK,UAASyB,EAAG,EAA1B,EAA4B;AACtCnB,MAAAA,MAAM,EAAE,QAD8B;AAEtCH,MAAAA,OAAO,EAAE,KAAKD;AAFwB,KAA5B,CAAL,CAIRK,IAJQ,CAIH,KAAKC,eAJF,CAAP;AAKD;;AACDA,EAAAA,eAAe,CAACkB,GAAD,EAAM;AACpB,QAAGA,GAAG,CAACC,EAAP,EAAW;AACT,aAAOD,GAAG,CAACE,IAAJ,EAAP;AACD;;AACD,WAAOC,OAAO,CAACC,MAAR,CAAiB,WAAUJ,GAAG,CAACK,MAAO,EAAtC,CAAP;AACA;;AACDC,EAAAA,OAAO,CAACP,EAAD,EAAK;AACZ,WAAOpB,KAAK,CAAE,GAAE,KAAKL,IAAK,gBAAeyB,EAAG,EAAhC,EAAkC;AAC5CnB,MAAAA,MAAM,EAAE,KADoC;AAE5CH,MAAAA,OAAO,EAAE,KAAKD;AAF8B,KAAlC,CAAL,CAINK,IAJM,CAID,KAAKC,eAJJ,CAAP;AAKC;;AACDyB,EAAAA,UAAU,CAACR,EAAD,EAAK;AACb,WAAOpB,KAAK,CAAE,GAAE,KAAKL,IAAK,gBAAeyB,EAAG,EAAhC,EAAkC;AAC5CnB,MAAAA,MAAM,EAAE,QADoC;AAE5CH,MAAAA,OAAO,EAAE,KAAKD;AAF8B,KAAlC,CAAL,CAINK,IAJM,CAID,KAAKC,eAJJ,CAAP;AAKC;;AA/EG,C,CAkFV;;;AACA,OAAO,MAAM0B,QAAQ,GAAG,IAAIrC,GAAJ,CAAQ;AAC5BI,EAAAA,GAAG,EAAE,6CADuB;AAE5BE,EAAAA,OAAO,EAAE;AACL,qBAAiB,sCADZ;AAEL,oBAAgB;AAFX;AAFmB,CAAR,CAAjB","sourcesContent":["class Api {\n    constructor(config) {\n      // тело конструктора\n      this._url = config.url;\n      this._headers = config.headers\n    }\n  \n    getInitialCards() {\n        return fetch(`${this._url}/cards`,{\n            method: 'GET',\n            headers: this._headers\n        })\n        .then(this._handleResponse)\n     }\n     getUserData() {\n        return fetch(`${this._url}/users/me`,{\n            method: 'GET',\n            headers: this._headers\n        })\n        .then(this._handleResponse)\n     }\n     updateUserData(data) {\n      return fetch(`${this._url}/users/me`,{\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.userName,\n        about: data.userInfo,\n        })\n    })\n    .then(this._handleResponse)\n     }\n     updateAvatar(newLink) {\n      return fetch(`${this._url}/users/me/avatar`,{\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: newLink\n        })\n      })\n      .then(this._handleResponse)\n     }\n     addCard(data) {\n       return fetch( `${this._url}/cards`, {\n         method: 'POST',\n         headers: this._headers,\n         body: JSON.stringify({\n         name: data.name,\n         link: data.link,\n         })\n       })\n       .then(this._handleResponse)\n     }\n    deleteCard(id) {\n      return fetch(`${this._url}/cards/${id}`,{\n        method: 'DELETE',\n        headers: this._headers\n    })\n    .then(this._handleResponse)\n    }\n    _handleResponse(res) {\n     if(res.ok) {\n       return res.json()\n     }\n     return Promise.reject (`Ошибка: ${res.status}`)\n    }\n    putLike(id) {\n    return fetch(`${this._url}/cards/likes/${id}`,{\n      method: 'PUT',\n      headers: this._headers\n    })\n    .then(this._handleResponse)\n    }\n    deleteLike(id) {\n      return fetch(`${this._url}/cards/likes/${id}`,{\n        method: 'DELETE',\n        headers: this._headers\n      })\n      .then(this._handleResponse)\n      }\n  }\n  \n//Создание api\nexport const mestoApi = new Api({\n    url: 'https://mesto.nomoreparties.co/v1/cohort-26',\n    headers: {\n        \"authorization\": \"ff36f33a-78de-4788-b2e8-96f517dc0490\",\n        \"Content-Type\": \"application/json\"\n    }\n  })"]},"metadata":{},"sourceType":"module"}